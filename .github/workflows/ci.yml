name: CI

on:
  push:
    branches:
      - main
    paths-ignore:
      - .devcontainer
  pull_request:
    branches:
      - main
    paths-ignore:
      - .devcontainer
  release:
    types:
      - created
      - published

env:
  PHP_VERSION: 8.4
  REGISTRY: ghcr.io

jobs:
  test-backend:
    name: Run Laravel tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.PHP_VERSION }}
          coverage: xdebug

      - name: Install Composer
        run: |
          wget https://github.com/composer/composer/releases/latest/download/composer.phar -O ./composer
          chmod +x ./composer

      - uses: actions/cache@v4
        with:
          path: vendor
          key: ${{ runner.os }}-${{ hashFiles('composer.lock') }}

      - name: Install dependencies
        run: ./composer install

      - name: Generate key
        run: |
          cp .env.testing .env
          ./artisan key:generate

      - name: Check code style
        run: ./composer run-script lint

      - name: Run tests
        run: ./composer run-script test

  test-frontend:
    name: Run Frontend tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Setup PHP
        uses: oven-sh/setup-bun@v2

      - uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ hashFiles('bun.lock') }}

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Check code style
        run: bun run lint

  build-docker-image:
    name: Build Docker image
    runs-on: ubuntu-latest
    needs:
      - test-backend
      - test-frontend
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    concurrency:
      cancel-in-progress: true
      group: ${{ github.ref }}-docker
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          labels: |
            org.opencontainers.image.title="BentoBox"
            org.opencontainers.image.description="Open Source Inventory Management"

      - name: Build and push
        uses: docker/build-push-action@v6
        id: push
        with:
          tags: ${{ env.REGISTRY }}/${{ github.repository }}
          labels: ${{ steps.meta.outputs.labels }}
          push: ${{ github.event_name != 'pull_request' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
